/** \file
 *  \brief Device Queue message interface control plane
 */

/*
 * Copyright (c) 2016, ETH Zurich.
 * All rights reserved.
 *
 * This file is distributed under the terms in the attached LICENSE file.
 * If you do not find this file, copies can be found by writing to:
 * ETH Zurich D-INFK, Universitaetsstrasse 6, CH-8092 Zurich. Attn: Systems Group.
 */

interface devif_ctrl "Device Queue Interface Control Plane" {
    /* Setup before we can create the queue on both sides */
    // in coreid is the coreid of the client side
    // 
    rpc setup(in uint32 coreid, in uint64 flags, out uint64 features, 
              out uint32 default_qsize, out uint32 default_bufsiz,      
              out bool reconnect, out String reconnect_name[256]);

    /* Create a device queue */
    rpc create(in cap rx, in cap tx, in uint64 flags,
               in uint64 size, out errval err);

    
    /* Destroy a device queue */
    rpc destroy();
    
    /* Add a memory region to the device queue 
       cann not use register as name since it will be a problem
       with compiling it */
    rpc reg(in cap mem, in uint32 region_id, out errval err);
    rpc dereg(in uint32 region_id, out errval err);
 
    /* Control messages to the other end */
    rpc control(in uint64 cmd, in uint64 value, out errval err);    

};
