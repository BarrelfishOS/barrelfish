/** \file
 *  \brief Device Queue message interface
 */

/*
 * Copyright (c) 2016, ETH Zurich.
 * All rights reserved.
 *
 * This file is distributed under the terms in the attached LICENSE file.
 * If you do not find this file, copies can be found by writing to:
 * ETH Zurich D-INFK, Universitaetsstrasse 6, CH-8092 Zurich. Attn: Systems Group.
 */

interface devif "Device Queue Interface" {
    /* Setup before we can create the queue on both sides */
    message setup_request();
    message setup_reply(uint64 features, uint32 default_qsize,
                        uint32 default_bufsize, bool reconnect,
                        String name[256]);

    /* Create a device queue */
    message create(cap rx, cap tx, uint64 flags, uint64 size);

    
    /* Destroy a device queue */
    message destroy();
    
    /* Add a memory region to the device queue 
       cann not use register as name since it will be a problem
       with compiling it */
    message reg(cap mem, uint32 region_id);
    message dereg(uint32 region_id);
 
    /* Control messages to the other end */
    message control(uint64 cmd, uint64 value);    

    /* Notify other end of the queue about new entries */
    message notify(uint8 num_slots);

    /* To return errors */
    message reply_err(errval err);
};
