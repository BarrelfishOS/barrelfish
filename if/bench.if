/*
 * Copyright (c) 2007, 2008, 2009, 2010, ETH Zurich.
 * All rights reserved.
 *
 * This file is distributed under the terms in the attached LICENSE file.
 * If you do not find this file, copies can be found by writing to:
 * ETH Zurich D-INFK, Haldeneggsteig 4, CH-8092 Zurich. Attn: Systems Group.
 */

interface bench "The bench Interface" {
        /* Used for generic benchmarking code */

	message init_request(uint8 coreid);
	message init_reply();

	message token_request();
	message token_reply();

	message busy_init_request();
	message busy_init_reply();
	message busy_ping();

        /* Messages for ump benchmarks */
        message ump_init_msg(uint8 coreid);

        /* Messages for flounder_stub_bench */
        message fsb_init_msg(uint8 coreid);
	message fsb_empty_request();
	message fsb_empty_reply();
	message fsb_buffer_request(uint8 buf[size, 2048]);
	message fsb_buffer_reply(uint8 buf[size, 2048]);

	message fsb_payload_request(int word0, int word1, int word2, int word3);
	message fsb_payload_reply(int word0, int word1, int word2, int word3);

	message fsb_payload1_request(int word0);
	message fsb_payload1_reply(int word0);

	message fsb_payload2_request(int word0, int word1);
	message fsb_payload2_reply(int word0, int word1);

	message fsb_payload8_request(int word0, int word1, int word2, int word3,
			  	int word4, int word5, int word6, int word7);
	message fsb_payload8_reply(int word0, int word1, int word2, int word3,
			  	int word4, int word5, int word6, int word7);

	message fsb_payload16_request(int word0, int word1, int word2, int word3,
			  	int word4, int word5, int word6, int word7,
			  	int word8, int word9, int word10, int word11,
			  	int word12, int word13, int word14, int word15);
	message fsb_payload16_reply(int word0, int word1, int word2, int word3,
			  	int word4, int word5, int word6, int word7,
			  	int word8, int word9, int word10, int word11,
			  	int word12, int word13, int word14, int word15);

	message fsb_payload32_1_request(int32 word0);
	message fsb_payload32_1_reply(int32 word0);
	message fsb_payload64_1_request(int64 word0);
	message fsb_payload64_1_reply(int64 word0);

	message fsb_payload32_2_request(int32 word0, int32 word1);
	message fsb_payload32_2_reply(int32 word0, int32 word1);
	message fsb_payload64_2_request(int64 word0, int64 word1);
	message fsb_payload64_2_reply(int64 word0, int64 word1);

	message fsb_payload32_4_request(int32 word0, int32 word1, int32 word2, int32 word3);
	message fsb_payload32_4_reply(int32 word0, int32 word1, int32 word2, int32 word3);
	message fsb_payload64_4_request(int64 word0, int64 word1, int64 word2, int64 word3);
	message fsb_payload64_4_reply(int64 word0, int64 word1, int64 word2, int64 word3);

	message fsb_payload32_8_request(int32 word0, int32 word1, int32 word2, int32 word3,
			  	int32 word4, int32 word5, int32 word6, int32 word7);
	message fsb_payload32_8_reply(int32 word0, int32 word1, int32 word2, int32 word3,
			  	int32 word4, int32 word5, int32 word6, int32 word7);
	message fsb_payload64_8_request(int64 word0, int64 word1, int64 word2, int64 word3,
			  	int64 word4, int64 word5, int64 word6, int64 word7);
	message fsb_payload64_8_reply(int64 word0, int64 word1, int64 word2, int64 word3,
			  	int64 word4, int64 word5, int64 word6, int64 word7);

	message fsb_payload32_16_request(int32 word0, int32 word1, int32 word2, int32 word3,
			  	int32 word4, int32 word5, int32 word6, int32 word7,
			  	int32 word8, int32 word9, int32 word10, int32 word11,
			  	int32 word12, int32 word13, int32 word14, int32 word15);
	message fsb_payload32_16_reply(int32 word0, int32 word1, int32 word2, int32 word3,
			  	int32 word4, int32 word5, int32 word6, int32 word7,
			  	int32 word8, int32 word9, int32 word10, int32 word11,
			  	int32 word12, int32 word13, int32 word14, int32 word15);
	message fsb_payload64_16_request(int64 word0, int64 word1, int64 word2, int64 word3,
			  	int64 word4, int64 word5, int64 word6, int64 word7,
			  	int64 word8, int64 word9, int64 word10, int64 word11,
			  	int64 word12, int64 word13, int64 word14, int64 word15);
	message fsb_payload64_16_reply(int64 word0, int64 word1, int64 word2, int64 word3,
			  	int64 word4, int64 word5, int64 word6, int64 word7,
			  	int64 word8, int64 word9, int64 word10, int64 word11,
			  	int64 word12, int64 word13, int64 word14, int64 word15);

        message lrpc_init();
        message lrpc_init_reply();

        /* LRPC benchmark */
        message lrpc_bench_reply(uint64 value);

	/* Shared memory clock benchmark */
	message shmc_init_request(uint8 coreid);
	message shmc_init_reply(cap cap);
	message shmc_start();
	message shmc_done();
};

