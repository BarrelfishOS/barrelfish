let
  common_cflags = Config.newlibAddCFlags
  common_omitcflags = [
        "-std=c99",
        "-Wredundant-decls",
        "-Wmissing-prototypes",
        "-Wmissing-declarations",
        "-Wimplicit-function-declaration",
        "-Werror" ]
in
  [
    build library {
      target = "stdio_si",
      cFiles = [ "vfprintf.c", "vfscanf.c", "vfwprintf.c", "vfwscanf.c"  ],
      addCFlags = common_cflags ++ [ "-DINTEGER_ONLY", "-DSTRING_ONLY" ],
      omitCFlags = common_omitcflags
    },

    build library {
      target = "stdio_i",
      cFiles = [ "vfprintf.c", "vfscanf.c", "vfwprintf.c", "vfwscanf.c"  ],
      addCFlags = common_cflags ++ [ "-DINTEGER_ONLY" ],
      omitCFlags = common_omitcflags
    },

    build library {
      target = "stdio_s",
      cFiles = [ "vfprintf.c", "vfscanf.c", "vfwprintf.c", "vfwscanf.c"  ],
      addCFlags = common_cflags ++ [ "-DSTRING_ONLY" ],
      omitCFlags = common_omitcflags
    },

    build library {
      target = "stdio",
      cFiles = [
      "clearerr.c",
      "fclose.c",
      "fdopen.c",
      "feof.c",
      "ferror.c",
      "fflush.c",
      "fgetc.c",
      "fgetpos.c",
      "fgets.c",
      "fileno.c",
      --"findfp.c",
      "fiprintf.c",
      "flags.c",
      "fopen.c",
      "fprintf.c",
      "fputc.c",
      "fputs.c",
      "fread.c",
      "freopen.c",
      "fscanf.c",
      "fiscanf.c",
      "fseek.c",
      "fsetpos.c",
      "ftell.c",
      "fvwrite.c",
      "fwalk.c",
      "fwrite.c",
      "getc.c",
      "getchar.c",
      "getc_u.c",
      "getchar_u.c",
      "getdelim.c",
      "getline.c",
      "gets.c",
      "iprintf.c",
      "iscanf.c",
      "makebuf.c",
      "perror.c",
      "printf.c",
      "putc.c",
      "putchar.c",
      "putc_u.c",
      "putchar_u.c",
      "puts.c",
      "refill.c",
      "remove.c",
      "rename.c",
      "rewind.c",
      "rget.c",
      "scanf.c",
      "sccl.c",
      "setbuf.c",
      "setbuffer.c",
      "setlinebuf.c",
      "setvbuf.c",
      "siprintf.c",
      "siscanf.c",
      "sniprintf.c",
      "snprintf.c",
      "sprintf.c",
      "sscanf.c",
      "stdio.c",
      "tmpfile.c",
      "tmpnam.c",
      "ungetc.c",
      "vdiprintf.c",
      "vdprintf.c",
      "viprintf.c",
      "viscanf.c",
      "vprintf.c",
      "vscanf.c",
      "vsiprintf.c",
      "vsiscanf.c",
      "vsnprintf.c",
      "vsniprintf.c",
      "vsprintf.c",
      "vsscanf.c",
      "wbuf.c",
      "wsetup.c",
      "asiprintf.c",
      "asprintf.c",
      "fcloseall.c",
      "fseeko.c",
      "ftello.c",
      "getw.c",
      "mktemp.c",
      "putw.c",
      "vasiprintf.c",
      "vasprintf.c",
      "asniprintf.c",
      "asnprintf.c",
      "diprintf.c",
      "dprintf.c",
      "fgetwc.c",
      "fgetws.c",
      "fmemopen.c",
      "fopencookie.c",
      "fpurge.c",
      "fputwc.c",
      "fputws.c",
      "funopen.c",
      "fwide.c",
      "fwprintf.c",
      "fwscanf.c",
      "getwc.c",
      "getwchar.c",
      "open_memstream.c",
      "putwc.c",
      "putwchar.c",
      "swprintf.c",
      "swscanf.c",
      "ungetwc.c",
      "vasniprintf.c",
      "vasnprintf.c",
      "vswprintf.c",
      "vswscanf.c",
      "vwprintf.c",
      "vwscanf.c",
      "wprintf.c",
      "wscanf.c",
      "vfwscanf.c", "vfscanf.c", "vfprintf.c", "vfwprintf.c"
    ],
    addCFlags = common_cflags,
    addLibraries = [ "stdio_si", "stdio_s", "stdio_i" ],
    omitCFlags = common_omitcflags
  }
]
