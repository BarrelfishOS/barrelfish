--------------------------------------------------------------------------
-- Copyright (c) 2007-2013, ETH Zurich.
-- All rights reserved.
--
-- This file is distributed under the terms in the attached LICENSE file.
-- If you do not find this file, copies can be found by writing to:
-- ETH Zurich D-INFK, Universitaetstrasse 6, CH-8092 Zurich. Attn: Systems Group.
--
-- Hakefile for lib/int_route
-- 
--------------------------------------------------------------------------

[

    --- This library co-locates the interrupt routing server into an existing
    --- domain
    build library { target = "int_route_server",
                    cFiles = [ "server/init.c" ],
                    flounderDefs = [ "int_route_service", "monitor_blocking" ],
                    flounderBindings = [ "int_route_service", "int_route_controller" ],
                    flounderExtraBindings = [ ("int_route_service", ["rpcclient"]), ("monitor_blocking", ["rpcclient"]) ],
                    addLibraries = [ "skb", "hashtable" ] 
                   },

    -- Build the library that contains a msix_controller driver
    -- This does only exist in library form for MSIx controller,
    -- as they (sometimes) have to be co-located with device drivers.
    build library { target = "int_msix_ctrl",
                    cFiles = [ "msix_ctrl/client.c" ],
                    flounderBindings =["int_route_controller"],
                    mackerelDevices = ["msix", "msix_e1000"]
                   },


    build library { target = "int_route_client",
                    cFiles = [ "client/client.c", "client/int_model.c" ],
                    flounderDefs = [ "int_route_service", "monitor_blocking" ],
                    flounderBindings = [ "int_route_service" ],
                    flounderExtraBindings = [ ("int_route_service", ["rpcclient"]), ("monitor_blocking", ["rpcclient"]) ]
                   },

    -- We run a stand alone IRS on ARMv7
    build application { target = "int_route",
                    cFiles = [ "server/standalone_armv7.c" ],
                    flounderDefs = [ "int_route_service", "monitor_blocking" ],
                    flounderBindings = [ "int_route_service", "int_route_controller" ],
                    flounderExtraBindings = [ ("int_route_service", ["rpcclient"]),
                                              ("monitor_blocking", ["rpcclient"]) ],
                    architectures = ["armv7"]
                   },

    -- We run a stand alone IRS on ARMv8. It uses lib skb_int_route_server
    build application { target = "int_route",
                    cFiles = [ "server/standalone.c" ],
                    flounderDefs = [ "int_route_service", "monitor_blocking" ],
                    flounderBindings = [ "int_route_service", "int_route_controller" ],
                    flounderExtraBindings = [ ("int_route_service", ["rpcclient"]),
                                              ("monitor_blocking", ["rpcclient"]) ],
                    addLibraries = ["int_route_server"],
                    architectures = ["armv8"] 
                   }
]
