--------------------------------------------------------------------------
-- Copyright (c) 2007-2010, 2013, 2016 ETH Zurich.
-- All rights reserved.
--
-- This file is distributed under the terms in the attached LICENSE file.
-- If you do not find this file, copies can be found by writing to:
-- ETH Zurich D-INFK, Universitaetsstrasse 6, CH-8092 Zurich. Attn: Systems Group.
--
-- Hakefile for /usr/skb
--
--------------------------------------------------------------------------

let ramfs_files = find inDir "programs" ".pl" ++
                  find inDir ("programs" </> "platforms") ".pl"
    sockeyeFiles = [ "omap44xx" ]
    ramdisk = "/skb_ramfs.cpio.gz"
    args arch = application {
                        target = "skb",
  		                cFiles = [ "skb_main.c", "skb_service.c", "queue.c",
                                   "octopus/code_generator.c",
                                   "octopus/predicates.c", "octopus/skb_query.c", 
                                   "octopus/skiplist.c", "octopus/fnv.c", "octopus/bitfield.c" ],
                        -- some include files cause problems...
                        omitCFlags = [ "-Wshadow", "-Wstrict-prototypes" ],
                        -- force optimisations on, without them we blow the stack
                        addCFlags = [ "-O2" ],
                        flounderBindings = [ "skb", "octopus" ],
                        addIncludes = [ "/usr/eclipseclp/Kernel/src"],
                        addLibraries = libDeps [ "eclipse", "shm", "dummies",
                                                 "icsolver", "vfs_ramfs",
                                                 "posixcompat", "hashtable", "pcre", 
                                                 "octopus_server", "octopus_parser", "skb",
                                                 "bench", "lwip" ],
                       architectures = [ arch ]
                }
in
  [ Rules [build (args arch) | arch <- [ "x86_64", "x86_32", "armv8", "armv7" ]],
    Rule ( [ Str "bash",
             In SrcTree "src" "skripts/mkcpio",
             NoDep SrcTree "src" "", Out "root" ramdisk]
             ++ [ In SrcTree "src" f | f <- ramfs_files ]
             ++ [ In BuildTree "" (sockeyeFactFilePath f) | f <- sockeyeFiles ] )
  ]
