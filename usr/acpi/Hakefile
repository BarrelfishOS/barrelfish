--------------------------------------------------------------------------
-- Copyright (c) 2007-2010, 2016 ETH Zurich.
-- Copyright (c) 2016, Hewlett Packard Enterprise Development LP.
-- All rights reserved.
--
-- This file is distributed under the terms in the attached LICENSE file.
-- If you do not find this file, copies can be found by writing to:
-- ETH Zurich D-INFK, Universitaetstr. 6, CH-8092 Zurich. Attn: Systems Group.
--
-- Hakefile for /usr/acpi
--
--------------------------------------------------------------------------

let commonCFiles = [
        "acpi.c",
        "acpica_osglue.c",
        "acpi_allocators.c",
        "pcilnk_controller_client.c",
        "acpi_service.c",
        "acpi_main.c",
        "buttons.c"
        ]

    archCFiles arch = case arch of
        "x86_32" -> archCFiles "x86_64"
        "x86_64" -> [
            "intel_vtd.c",
            "acpi_ec.c",
            "arch/x86/ioapic.c",
            "arch/x86/ioapic_controller_client.c",
            "arch/x86/acpica_osglue_arch.c",
            "arch/x86/acpi_service_arch.c",
            "arch/x86/acpi_interrupts_arch.c",
            "arch/x86/acpi_arch.c",
            "arch/x86/acpi_allocators_arch.c",
            "arch/x86/video.c" ]
        "armv8" -> [
            "arch/armv8/acpica_osglue_arch.c",
            "arch/armv8/acpi_service_arch.c",
            "arch/armv8/acpi_interrupts_arch.c",
            "arch/armv8/acpi_allocators_arch.c",
            "arch/armv8/acpi_arch.c"]

    commonDevices = [ "lpc_ioapic" ]

    archDevices arch = case arch of
        "x86_32" -> archDevices "x86_64"
        "x86_64" -> [
            "acpi_ec",
            "vtd",
            "vtd_iotlb" ]
        "armv8" -> [ ]

    commonCFlags = [
        "-Wno-redundant-decls",
        "-Wno-unused-function" ]

    archCFlags arch = case arch of
        "x86_32" -> archCFlags "x86_64"
        "x86_64" -> [ "-DACPI_PROBE_ECDT", "-DACPI_HAVE_VTD" ]
        "armv8" -> [ "-DACPI_REDUCED_HARDWARE=1", "-DACPI_MISALIGNMENT_NOT_SUPPORTED" ]

  in
    [ build application {
        target = "acpi",
        flounderBindings = [ "acpi", "int_route_controller" ],
        flounderDefs = [ "monitor", "monitor_blocking", "octopus" ],
        flounderExtraDefs = [ ("monitor_blocking", ["rpcclient"]) ],
        flounderTHCStubs = [ "octopus" ],
        mackerelDevices = commonDevices ++ (archDevices arch),
        cFiles = commonCFiles ++ (archCFiles arch),
        addIncludes = [ "/lib/acpica/source/include" ],
        addCFlags = commonCFlags ++ (archCFlags arch),
        addLibraries = [
            "mm",
            "acpica",
            "skb",
            "pciconfspace",
            "octopus",
            "octopus_parser",
            "thc",
            "acpi_client" ],
        architectures = [ arch ] }
        | arch <- [ "x86_64", "x86_32", "armv8" ]
    ]
