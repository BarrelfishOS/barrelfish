--------------------------------------------------------------------------
-- Copyright (c) 2013, ETH Zurich.
-- All rights reserved.
--
-- This file is distributed under the terms in the attached LICENSE file.
-- If you do not find this file, copies can be found by writing to:
-- ETH Zurich D-INFK, Universitaetstr. 6, CH-8092 Zurich. Attn: Systems Group.
--
-- Hakefile for cpu boot drivers
--
--------------------------------------------------------------------------

let commonCFiles = [ "common.c", "main.c" ]

    archCFiles arch = case arch of
        "x86_32" -> [ "arch/x86/boot_arch.c" ]
        "x86_64" -> [ "arch/x86/boot_arch.c" ]
        "k1om"   -> [ "arch/x86/boot_arch.c" ]
        "armv7"  -> [ "arch/armv7/boot_arch.c" ]
        "armv8"  -> [ "arch/armv8/boot_arch.c" ]

    --- incluldes ---

    commonInclude = [ "../../../kernel/include" ]

    archIncludes arch = case arch of
        "x86_64" -> [ "../../../kernel/include/arch/x86_64/"]
        "x86_32" -> [ "../../../kernel/include/arch/x86_32/"]
        "k1om"   -> [ "../../../kernel/include/arch/x86_64/"]
        "armv7"  -> [ "../../../kernel/include/arch/armv7/"]
        "armv8"  -> [ "../../../kernel/include/arch/armv8/"]

    --- flounder defs ---

    commonFlounderDefs = [ "monitor_blocking", "monitor", "octopus" ]

    archFlounderDefs arch = case arch of
        "x86_64" -> [ "acpi" ]
        "x86_32" -> [ "acpi" ]
        "k1om"   -> []
        "armv7"  -> []
        "armv8"  -> [ "acpi" ]

    archFlounderExtraDefs arch =  case arch of
        "x86_64" -> [ ("monitor_blocking", ["rpcclient"]), ("acpi", ["rpcclient"]) ]
        "x86_32" -> [ ("monitor_blocking", ["rpcclient"]), ("acpi", ["rpcclient"]) ]
        "k1om"   -> [ ("monitor_blocking", ["rpcclient"]) ]
        "armv7"  -> [ ("monitor_blocking", ["rpcclient"]) ]
        "armv8"  -> [ ("monitor_blocking", ["rpcclient"]), ("acpi", ["rpcclient"]) ]

    --- libraries ---

    commonLibraries = [ "spawndomain", "elf", "octopus", "bench", "skb" ]

    archLibraries arch = case arch of 
        "x86_64" -> [ "vfs", "acpi_client" ]
        "x86_32" -> [ "vfs",  "acpi_client" ]
        "k1om"   -> [ "vfs_noblockdev"  ]
        "armv7"  -> [ "vfs_ramfs" ]
        "armv8"  -> [ "vfs_ramfs", "acpi_client" ]

    --- assembly files ---

    archAssembyFiles arch =  case arch of
        "x86_64" -> ["arch/x86/init_ap_x86_64.S", "arch/x86/init_ap_x86_32.S"]
        "x86_32" -> ["arch/x86/init_ap_x86_64.S", "arch/x86/init_ap_x86_32.S"]
        "k1om"   -> ["arch/x86/init_ap_x86_64.S", "arch/x86/init_ap_x86_32.S"]
        _        -> []

    in
      [
        build application {
            target = "corectrl",
            cFiles = commonCFiles ++ (archCFiles arch),
            addIncludes = commonInclude ++ (archIncludes arch),
            assemblyFiles = archAssembyFiles arch,
            addLibraries = libDeps (commonLibraries ++ (archLibraries arch)),
            flounderDefs = commonFlounderDefs ++ (archFlounderDefs arch),
            flounderExtraDefs = archFlounderExtraDefs arch, 
            flounderBindings = [ "intermon", "octopus" ],
            architectures = [ arch ] 
        } | arch <- allArchitectures

      ]
