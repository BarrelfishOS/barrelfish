
:- load_decl(opium_scenario(name : kernel, files : ['/usr/local/eclipse/prerelease/opium/kernel.op', '/usr/local/eclipse/prerelease/opium/coprocess.op', '/usr/local/eclipse/prerelease/opium/exec_control.op', '/usr/local/eclipse/prerelease/opium/global.op', '/usr/local/eclipse/prerelease/opium/extension.op', '/usr/local/eclipse/prerelease/opium/predflag.op', '/usr/local/eclipse/prerelease/opium/record.op', '/usr/local/eclipse/prerelease/opium/kernel_demos.op'], scenarios : [], options : _g18113, updated : _g18119, message : "Scenario kernel contains all the basic mechanisms of Opium which are \nneeded to trace an Eclipse session in a second Eclipse/Opium session.  \n\nThe two basic primitives on top of which every other tracing predicate  \nis implemented are f_get_bare/5 and b_get_bare/5. They are therefore   \nthe ones to customize if you want a slightly different execution model, \nand no existing parameters can be set appropriatly.  Note that goto/1   \nis the only exception, it is not implemented on top of *_get_bare. \n\nThere are some explicit demos for this scenario but scenarios \n\"step_by_step\", \"zooming\", \"conditional_spypoints\", \n\"ancestor\", \"loop\", \"abstracts\" and \"failure\" are even better \nexamples of use of the basic tracing facilities. The sources of these \nscenarios are available uncoded.")).
